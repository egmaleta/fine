program : top_defn_list
        | <empty>

top_defn_list : top_defn top_defn_list
              | top_defn

top_defn : defn

defn_list : defn defn_list
          | defn

defn : val_defn
     | fun_defn
     | op_info

val_defn : VAL name ASSIGN body_expr

fun_defn : FUN name params ASSIGN body_expr
         | FUN ID operator ID ASSIGN body_expr

body_expr : expr
          | INTERNAL params

op_info : INFIXL NAT operator
        | INFIXR NAT operator

params : ID params
       | ID

name : ID
     | OPAR EXT_OP CPAR
     | OPAR OP CPAR

operator : BTICK ID BTICK
         | EXT_OP
         | OP

expr : BSLASH params ASSIGN expr
     | DO expr_list THEN expr
     | LET defn_list IN expr
     | MATCH expr match_list
     | op_chain

expr_list : expr SEMI expr_list
          | expr SEMI
          | expr

match_list : match match_list
           | match

match : BAR pattern ASSIGN expr

pattern : ID
        | literal
        | data_ct

op_chain : operand operator op_chain
         | operand

operand : atom args

atom : OPAR expr CPAR
     | name
     | literal
     | data_ct_id

# literals represent data constructors that cannot be
# enumerated finitely, such as numbers and strings
literal : DEC
        | NAT

data_ct : TYPE_ID
        | UNIT

data_ct_id : TYPE_ID
           | UNIT

args : ID ASSIGN atom args
     | atom args
     | <empty>
